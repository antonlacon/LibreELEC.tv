#!/bin/bash

# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2022-present Team LibreELEC (https://libreelec.tv)

set -e

# If config/options can't be sourced, abort. PWD isn't the expected ROOT.
# Only source from config/options what will be used
BUILD_ROOT=$(. config/options "" && echo "${BUILD_ROOT}")
BUILD_BASE=$(. config/options "" && echo "${BUILD_BASE}")

if [ -z "${BUILD_BASE}" -o -z "${BUILD_ROOT}" ]; then
  # make sure variables are set before running an rm
  echo "error: ${0}: both BUILD_BASE and BUILD_ROOT must be set when running \"[clean|distclean]\"; aborting"
  exit 1
fi

# remove packages from $BUILD that are not part of toolchain meta-package
clean_keep_toolchain() {
  # source options here due to Jenkins issue (PR 6444)
  . config/options ""

  # package list from buildplan to create toolchain
  local toolchain_list=$( \
    "${SCRIPTS}/pkgjson" |
    "${SCRIPTS}/genbuildplan.py" --hide-header --list-packages --build toolchain ${GENFLAGS} || \
    die "error: ${0}: unable to generate toolchain build plan"
  )

  # package list from buildplan to create image
  local image_list=$( \
    "${SCRIPTS}/pkgjson" |
    "${SCRIPTS}/genbuildplan.py" --hide-header --list-packages --build image ${GENFLAGS} || \
    die "error: ${0}: unable to generate image build plan"
  )

  # remove entries on toolchain_list from image_list
  for package in "${toolchain_list}"; do
    image_list=$(echo "${image_list}" | grep -v "${package}")
  done

  # clean remaining packages on image_list from $BUILD
  for package in "${image_list}"; do
    "${SCRIPTS}/clean" "${package}"
  done
}

# task handling
case $1 in
  --clean)
    rm -rf "${BUILD_ROOT}/${BUILD_BASE}."*/* "${BUILD_ROOT}/${BUILD_BASE}."*/.stamps
  ;;
  --distclean)
    rm -rf "${BUILD_ROOT}/.ccache" "${BUILD_ROOT}/${BUILD_BASE}."*
  ;;
  --clean-keep-toolchain)
    clean_keep_toolchain
  ;;
  *)
    echo "error: ${0}: unsupported option on CLI; aborting"
    exit 1
  ;;
esac
