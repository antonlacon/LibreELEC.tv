#!/bin/bash

# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2018 Ian Leonard (antonlacon@gmail.com)
#
# Scan through the given directory looking for out of date source packages.
# If a source tarball is found that is different from what is currently in tree
# print out the discovered files. Delete the directory when the package is no
# longer present.
#
# If -d is passed to the script, also delete the files.

set -e

. config/options ""

# default variables
DESTRUCTIVE_RUN="false"


# helper functions
help(){
  echo "Usage: ${0} [-hd]"
    echo "Set PROJECT, DEVICE and ARCH as required."
    echo "  -h this help"
    echo "  -d delete files (default: no)"
}


# command line opts
while getopts hd OPT; do
  case "${OPT}" in
    h)
      help
      exit 0
      ;;
    d)
      DESTRUCTIVE_RUN="true"
      ;;
    \?)
      # error and output help on unknown
      help
      die
      ;;
  esac
done

shift $((${OPTIND}-1))


# sanity checking
if [ ! -d "${SOURCES}" ]; then
  die "error: ${SOURCES} is not a directory"
fi


# main
# process files in SOURCES
for SOURCE_PACKAGE in $(find "${SOURCES}/" -mindepth 1 -type d); do
  PACKAGE_NAME=$(basename "${SOURCE_PACKAGE}")

  # check if package is still in the tree to selectively prune, or delete the dir
  PACKAGE_DIR=$(get_pkg_directory "${PACKAGE_NAME}")
  if [ -n "${PACKAGE_DIR}"  ]; then
    CUR_PACKAGE_FILE=$(basename $(get_pkg_variable "${PACKAGE_NAME}" "PKG_SOURCE_NAME"))

    for FILE in $(find "${SOURCE_PACKAGE}/" -type f); do
      # don't test auxilliary files
      if [[ "${FILE}" = *.url ]] || [[ "${FILE}" = *.sha256 ]]; then
        continue
      fi

      # list all files that would be deleted
      if [ "${FILE}" != "${SOURCES}/${PACKAGE_NAME}/${CUR_PACKAGE_FILE}" ]; then
        ls -1 "${FILE}"*
        if [ "${DESTRUCTIVE_RUN}" = "true" ]; then
          rm "${FILE}"*
        fi
      fi
    done
  else
    echo "${PACKAGE_NAME} no longer in tree"
    if [ "${DESTRUCTIVE_RUN}" = "true" ]; then
      rm -r "${SOURCE_PACKAGE}"
    fi
  fi
done

exit
